# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-10 13:34
from __future__ import unicode_literals

import Q.questionnaire.models.models_ontologies
import Q.questionnaire.models.models_projects
import Q.questionnaire.q_fields
import Q.questionnaire.q_utils
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='QInstitute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Questionnaire Institute',
                'ordering': ('name',),
                'abstract': False,
                'verbose_name_plural': 'Questionnaire Institutes',
            },
        ),
        migrations.CreateModel(
            name='QOntology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=512, validators=[Q.questionnaire.q_utils.ValidateNoSpaces(), Q.questionnaire.q_utils.ValidateNoBadChars()])),
                ('version', Q.questionnaire.q_fields.QVersionField()),
                ('documentation', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('file', Q.questionnaire.q_fields.QFileField(help_text='Note that files with the same names will be overwritten', storage=Q.questionnaire.q_fields.OverwriteStorage(), upload_to='questionnaire/ontologies', validators=[Q.questionnaire.models.models_ontologies.validate_ontology_file_extension])),
                ('last_registered_version', Q.questionnaire.q_fields.QVersionField(blank=True, null=True)),
                ('ontology_type', models.CharField(choices=[('SPECIALIZATION', 'Specialization (ie: CMIP6)'), ('SCHEMA', 'Schema (ie: CIM2)')], max_length=256)),
                ('is_registered', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Questionnaire Ontology',
                'abstract': False,
                'verbose_name_plural': 'Questionnaire Ontologies',
            },
        ),
        migrations.CreateModel(
            name='QProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, validators=[Q.questionnaire.q_utils.ValidateNoSpaces(), Q.questionnaire.q_utils.ValidateNoBadChars(), Q.questionnaire.q_utils.ValidateNoReservedWords(), Q.questionnaire.q_utils.ValidateNoProfanities()])),
                ('title', models.CharField(max_length=128, validators=[Q.questionnaire.q_utils.ValidateNoProfanities()])),
                ('description', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(help_text='What order should this project be presented in the index page?<br/>  This can be changed in the admin page listing <i>all</i> QProjects.', validators=[Q.questionnaire.models.models_projects.validate_in_project_range])),
                ('email', models.EmailField(help_text='Point of contact for this project.', max_length=254, verbose_name='Contact Email')),
                ('url', models.URLField(blank=True, help_text='External URL for this project.')),
                ('logo', models.ImageField(blank=True, help_text='All images will be resized to 96 x 96.', null=True, storage=Q.questionnaire.q_fields.OverwriteStorage(), upload_to=Q.questionnaire.models.models_projects.generate_upload_to)),
                ('display_logo', models.BooleanField(default=False)),
                ('authenticated', models.BooleanField(default=True)),
                ('is_legacy', models.BooleanField(default=False, help_text="A legacy project is one that still uses CIM1;  If a legacy host is specified, then requests get routed there.  Do not check this unless you really know what you're doing.")),
                ('is_active', models.BooleanField(default=True, help_text='A project that is not active cannot be used')),
                ('is_displayed', models.BooleanField(default=True, help_text='A project that is not displayed is not included in the Index Page, although users can still navigate to it if they know its URL')),
                ('groups', models.ManyToManyField(blank=True, to='auth.Group')),
            ],
            options={
                'verbose_name': 'Questionnaire Project',
                'abstract': False,
                'verbose_name_plural': 'Questionnaire Projects',
            },
        ),
        migrations.CreateModel(
            name='QProjectOntology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ontology', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='questionnaire.QOntology')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='questionnaire.QProject')),
            ],
            options={
                'verbose_name': 'Questionnaire Project Ontology',
                'abstract': False,
                'verbose_name_plural': 'Questionnaire Project Ontologies',
            },
        ),
        migrations.CreateModel(
            name='QTestPostgresModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=512)),
                ('documentation', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Questionnaire Test Postgres Model',
                'abstract': False,
                'verbose_name_plural': 'Questionnaire Test Postgres Models',
            },
        ),
        migrations.AddField(
            model_name='qproject',
            name='ontologies',
            field=models.ManyToManyField(blank=True, help_text='Only registered ontologies (schemas or specializations) can be added to projects.', through='questionnaire.QProjectOntology', to='questionnaire.QOntology', verbose_name='Supported Ontologies'),
        ),
        migrations.AlterUniqueTogether(
            name='qontology',
            unique_together=set([('name', 'version')]),
        ),
        migrations.AlterUniqueTogether(
            name='qprojectontology',
            unique_together=set([('project', 'ontology')]),
        ),
    ]
